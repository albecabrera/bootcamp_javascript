// // Reto: Programaci√≥n Orientada a Objetos
// 1. Refuerza tus conocimientos de POO creando un sistema de Veh√≠culos.
//       1. Crea una clase Veh√≠culo que incluya un constructor que establezca el 
// n√∫mero de ruedas y un m√©todo para mostrar detalles generales del veh√≠culo. 
//       2. Crea dos subclases de Veh√≠culos cualesquiera que hereden de Veh√≠culo e incluyan un constructor con atributos espec√≠ficos, como la capacidad de pasajeros, y un m√©todo para mostrar detalles personalizados.
//       3. Crea una instancia de cada Veh√≠culo y muestra sus detalles en la consola. üöóüö≤
// 2. Intenta escribir el c√≥digo de JavaScript que ves en la terminal. No tiene que ser perfecto! üßë‚Äçüíª 

class Vehiculo {
    constructor(ruedas) {
        this.ruedas = ruedas;
    }

    mostrarDetalles() {
        console.log(`Este veh√≠culo tiene ${this.ruedas} ruedas.`);
    }
}
class Coche extends Vehiculo {
    constructor(ruedas, capacidadPasajeros) {
        super(ruedas);
        this.capacidadPasajeros = capacidadPasajeros;
    }

    mostrarDetalles() {
        super.mostrarDetalles();
        console.log(`Este coche tiene una capacidad de ${this.capacidadPasajeros} pasajeros.`);
    }
}
class Bicicleta extends Vehiculo {
    constructor(ruedas, tipo) {
        super(ruedas);
        this.tipo = tipo;
    }

    mostrarDetalles() {
        super.mostrarDetalles();
        console.log(`Esta bicicleta es de tipo ${this.tipo}.`);
    }
}
// Crear instancias de cada veh√≠culo
const coche = new Coche(4, 5);
const bicicleta = new Bicicleta(2, 'monta√±a');
// Mostrar detalles en la consola
coche.mostrarDetalles();
bicicleta.mostrarDetalles();
